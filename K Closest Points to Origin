class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> second(k);
        
        int r=points.size();
        
        priority_queue<vector<int>> store;
        for(auto p:points){
            int x=p[0]; int y=p[1];
            store.push({x*x + y*y,x,y});
            if(store.size()>k){
                store.pop();
            }
        }
        for(int i=0;i<k;i++){
            vector<int> top=store.top();
            
            second[i]={top[1],top[2]};
            store.pop();
        }
        return second;

    }
};
